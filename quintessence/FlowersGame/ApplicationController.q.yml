parent_classes:
  - class: AllegroFlare::Screen
    scope: public
    init_with: "{}"
properties:
  - name: framework
    type: AllegroFlare::Framework*
    init_with: nullptr
    constructor_arg: true
  - name: screens
    type: AllegroFlare::Screens*
    init_with: nullptr
    constructor_arg: true
  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true
functions:
  - name: key_down_func
    parameters:
      - name: ev
        type: ALLEGRO_EVENT*
        default_argument: nullptr
    override: true
    body: |
      if (!ev) return;
      if (!framework)
      {
         std::stringstream error_message;
         error_message << "FlowersGame::ApplicationController.key_down_func error: nullptr framework";
         throw std::runtime_error(error_message.str());
      }
      if (!screens) throw std::runtime_error("FlowersGame::ApplicationController.key_down_func error: nullptr screens");

      switch(ev->keyboard.keycode)
      {
      case ALLEGRO_KEY_ESCAPE:
         framework->shutdown_program = true;
         break;
      default:
         break;
      }
      return;
    body_dependency_symbols:
      - AllegroFlare::Screens*
      - AllegroFlare::FrameworkScreenRegistrar
dependencies:
  - symbol: al_clear_to_color
    headers: [ allegro5/allegro.h ]
  - symbol: ALLEGRO_EVENT*
    headers: [ allegro5/allegro.h ]
  - symbol: al_color_name
    headers: [ allegro5/allegro_color.h ]
  - symbol: AllegroFlare::FrameworkScreenRegistrar
    headers: [ AllegroFlare/FrameworkScreenRegistrar.hpp ]
  - symbol: AllegroFlare::Framework*
    headers: [ AllegroFlare/Framework.hpp ]
  - symbol: AllegroFlare::Screens*
    headers: [ AllegroFlare/Screens.hpp ]
  - symbol: AllegroFlare::Screen
    headers: [ AllegroFlare/Screen.hpp ]
  - symbol: AllegroFlare::FontBin*
    headers: [ AllegroFlare/FontBin.hpp ]
