properties:
  - name: cursor_x
    type: int
    init_with: 0
    getter: true
  - name: cursor_y
    type: int
    init_with: 0
    getter: true
  - name: width
    type: int
    init_with: (1920 * 0.6)
    getter: true
  - name: height
    type: int
    init_with: (1080 * 0.5)
    getter: true
  - name: flowers
    type: std::vector<Flowers::Flower>
    init_with: "{}"
    getter_ref: true
  - name: num_columns
    type: int
    init_with: 6
  - name: num_rows
    type: int
    init_with: 4
  - name: featured_flowers
    type: std::vector<Flowers::Flower>
    init_with: "{}"
    getter_ref: true
functions:
  - name: calc_cell_width
    type: float
    body: return (float)width / num_columns;
  - name: calc_cell_height
    type: float
    body: return (float)height / num_rows;
  - name: spawn_initial_flowers
    type: void
    body: |
      float cell_width = calc_cell_width();
      float cell_height = calc_cell_height();

      Flowers::FlowerGenerator flower_generator;

      for (unsigned y=0; y<num_rows; y++)
      {
         for (unsigned x=0; x<num_columns; x++)
         {
            Flowers::Flower flower = flower_generator.generate_random_flower();

            flower.set_x(cell_width * x + cell_width * 0.5);
            flower.set_y(cell_height * y + cell_height * 0.5);

            flowers.push_back(flower);
         }
      }
      return;
    body_dependency_symbols:
      - Flowers::FlowerGenerator
  - name: flower_at
    type: Flowers::Flower*
    parameters:
      - name: x
        type: int
        default_argument: 0
      - name: y
        type: int
        default_argument: 0
    body: |
      if (x < 0 || y < 0) return nullptr;
      if (x >= num_columns || y >= num_rows) return nullptr;
      return &flowers[x + y*num_columns];
  - name: flower_at_cursor
    type: Flowers::Flower
    body: |
      Flowers::Flower *flower = flower_at(cursor_x, cursor_y);
      if (!flower) throw std::runtime_error("Flowers/Gameboard.flower_at_cursor unexpectedly returned nullptr");
      return *flower;
    body_dependency_symbols:
      - std::runtime_error
  - name: move_cursor_up
    type: void
    body: |
      cursor_y -= 1;
      while (cursor_y < 0) cursor_y += num_rows;
      return;
  - name: move_cursor_down
    type: void
    body: |
      cursor_y += 1;
      if (cursor_y >= num_rows) cursor_y = cursor_y % num_rows;
      return;
  - name: move_cursor_left
    type: void
    body: |
      cursor_x -= 1;
      while (cursor_x < 0) cursor_x += num_columns;
      return;
  - name: move_cursor_right
    type: void
    body: |
      cursor_x += 1;
      if (cursor_x >= num_columns) cursor_x = cursor_x % num_columns;
      return;
  - name: pick_flower
    type: void
    body: |
      featured_flowers.push_back(flower_at_cursor());
dependencies:
  - symbol: Flowers::Flower*
    headers: [ Flowers/Flower.hpp ]
  - symbol: Flowers::Flower
    headers: [ Flowers/Flower.hpp ]
  - symbol: std::vector<Flowers::Flower>
    headers: [ vector, Flowers/Flower.hpp ]
  - symbol: Flowers::FlowerGenerator
    headers: [ Flowers/FlowerGenerator.hpp ]
