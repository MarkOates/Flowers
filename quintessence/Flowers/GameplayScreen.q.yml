parent_classes:
  - class: AllegroFlare::Screen
    scope: public
    init_with: "{}"
properties:
  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true
  - name: flowers
    type: std::vector<Flowers::Flower>
    init_with: "{}"
  - name: screen_width
    type: int
    init_with: 1
    constructor_arg: true
  - name: screen_height
    type: int
    init_with: 1
    constructor_arg: true
  - name: gameboard_width
    type: int
    init_with: 600
  - name: gameboard_height
    type: int
    init_with: 300
functions:
  - name: initialize
    type: void
    body: |
      Flowers::Flower flower;
      flower.set_x(gameboard_width/2);
      flower.set_y(gameboard_height/2);
      flower.set_peduncle_height(40);
      flowers.push_back(flower);
      return;
  - name: primary_timer_func
    override: true
    body: |
      allegro_flare::placement2d place(800/2, 600/2, gameboard_width, gameboard_height);
      place.align = AllegroFlare::vec2d(0.5, 0.5);
      place.start_transform();

      al_draw_rectangle(0, 0, gameboard_width, gameboard_height, al_color_name("red"), 3.0);

      for (auto &flower : flowers)
      {
         allegro_flare::placement2d flower_placement(flower.get_x(), flower.get_y(), 0, 0);
         flower_placement.start_transform();
         Flowers::FlowerRenderer renderer(&flower);
         renderer.render();
         flower_placement.restore_transform();
      }

      place.restore_transform();
      return;
    body_dependency_symbols:
      - al_draw_rectangle
      - al_color_name
      - allegro_flare::placement2d
      - Flowers::FlowerRenderer
dependencies:
  - symbol: std::vector<Flowers::Flower>
    headers: [ vector, Flowers/Flower.hpp ]
  - symbol: AllegroFlare::FontBin*
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: AllegroFlare::Screen
    headers: [ AllegroFlare/Screen.hpp ]
  - symbol: allegro_flare::placement2d
    headers: [ allegro_flare/placement2d.h ]
  - symbol: al_draw_rectangle
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: al_color_name
    headers: [ allegro5/allegro_color.h ]
  - symbol: Flowers::FlowerRenderer
    headers: [ Flowers/FlowerRenderer.hpp ]
