properties:
  - name: flower
    type: Flowers::Flower*
    init_with: nullptr
    constructor_arg: true
  - name: outline_thickness
    type: float
    init_with: 4.0f
  - name: outline_color
    type: ALLEGRO_COLOR
    init_with: "al_color_name(\"purple\")"
functions:
  - name: render_pistil
    type: void
    body: |
      float receptacle_y = flower->calculate_receptacle_y();
      float y = receptacle_y;
      float stigma_radius = 10.0f;
      ALLEGRO_COLOR pistil_color = flower->get_pistil_color();

      al_draw_filled_circle(0, -y, stigma_radius, pistil_color);
      al_draw_circle(0, -y, stigma_radius, outline_color, outline_thickness);
      return;
    type: void
  - name: render_peduncle
    type: void
    body: |
      float peduncle_height = flower->get_peduncle_height();
      float peduncle_thickness = 8.0f;
      ALLEGRO_COLOR peduncle_color = al_color_name("green");

      al_draw_line(0, 0, 0, -peduncle_height, peduncle_color, peduncle_thickness);
      return;
  - name: render
    type: void
    body: |
      if (!flower) throw std::runtime_error("[Flower::FlowerRenderer.render() error]: You must pass a valid flower");
      //if (!al_is_primitives_addon_initialized())
      //   throw std::runtime_error("[Flower::FlowerRenderer.render() error]: You must al_init_primitives_addon()");

      render_peduncle();
      render_pistil();

      return;
    body_dependency_symbols:
      - std::runtime_error
      - al_draw_line
      - al_draw_filled_circle
      - al_color_name
dependencies:
  - symbol: std::runtime_error
    headers: [ stdexcept ]
  - symbol: Flowers::Flower*
    headers: [ Flowers/Flower.hpp ]
  - symbol: al_draw_line
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: al_color_name
    headers: [ allegro5/allegro_color.h ]
  - symbol: ALLEGRO_COLOR
    headers: [ allegro5/allegro.h ]
  - symbol: al_draw_filled_circle
    headers: [ allegro5/allegro_primitives.h ]
